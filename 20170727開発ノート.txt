20170806
w. index034_2.html > 職業大分類　項目

x. index034_2_A~L.html > 職業中分類　項目


y. index038.html > 群馬県　市町村一覧
　
z. index038_2_A.html > 
-------

20170805
DECK.GL カタログ
https://uber.github.io/deck.gl/#/documentation/layer-catalog/arc-layer
-------

20170804
**ラインチャートのメモリ色を変更**
s. index037.html > 複数ラインチャート

JSON データを取得
http://qiita.com/Takeshi-Uchida/items/0891695be92084f3963f

**d3.scaleTime() **
http://qiita.com/huigo/items/9182374f4a91f8f78f16
// x軸を　期間の幅にあわせていいかんじに表示

t. index37_4.html > 
日付処理　moment.js 


u. index37_2.html > 左右に違うメモリを配置した　複数ラインチャート

v. index37_3.html > Json  データを直接書いて　読み込む　複数ラインチャート




-------------
20170804
**プレゼン用エフェクト**
ボックスシャドウを斜めにオーバーレイ
.lightbox {
	position: fixed;
	top: 50%; left: 50%;
	margin: -200px;
	box-shadow: 0 0 0 50vmax rgba(0,0,0,.8);
}


バックにブラーをかける
0. css
/**
 * De-emphasizing by blurring (AND dimming)
 */

main {
	transition: .6s;
	background: white;
}

main.de-emphasized {
	-webkit-filter: blur(3px);
	filter: blur(3px);
}

dialog {
	position: fixed;
	top: 50%; left: 50%;
	z-index: 1;
	width: 10em;
	padding: 2em;
	margin: -5em;
	border: 1px solid silver;
	border-radius: .5em;
	box-shadow: 0 .2em .5em rgba(0,0,0,.5),
	            0 0 0 100vmax rgba(0,0,0,.2);
}

dialog:not([open]) {
	display: none;
}

body {
	font: 150%/1.6 Baskerville, Palatino, serif;
}
--------
1. jQuery
function $(sel) {
	return document.querySelector(sel);
}

var dialog = $('dialog');
var main = $('main');

$('button').onclick = function() {
	
	dialog.setAttribute('open', '');
	
	main.classList.add('de-emphasized');
}

dialog.onclick = function() {
	if (dialog.close) {
		dialog.close();
	}
	else {
		dialog.removeAttribute('open');
	}
	
	main.classList.remove('de-emphasized');
}



---------------------------------
20170803

u. index24.html > 群馬県　創業数
https://opendata.resas-portal.go.jp/api/v1/municipality/foundation/perYear?cityCode=-&prefCode=10
d3.request(url)
  .header("X-API-KEY", "2tuRiAulZpl0l2EvgqfZKacOui7nVGDoXhOKKJQ0")
  .mimeType("application/json")
  .response(function(xhr) { return JSON.parse(xhr.responseText) })
  .get(callback);

v. index025.html > index024.html の 群馬県　創業数　を 改良　XAxis のString がうまく入らない　＞　できそう
  
注）複数のラインチャートの基本は > index024_2.html をもとに作ればできる
---------------------------------

20170801
leaflet.js + d3js
https://shimz.me/blog/d3-js/3517

基本的な使い方
https://shimz.me/blog/leaflet-js/4142


-----------

20170801
o. index028.html >  特産品　マーカーでマップ

p. index029.html > 外部ファイルの JSON/data3.json  から　bar chart を表示

q. index030.html > RESAS > 群馬県 総人口推移

r. index031.html > RESAS > グループバーチャート > だめ

s. index031_test.html > 外部ファイルの csv.data5.csv から　グループ　bar chart　を表示

t. index032.html > バーチャートの上に値を書く

u. index033.html > RESAS > 指定地域への国籍別訪問者数

v. index034.html > RESAS > 有効求人倍率
例外
** 清水さん d3.js Axis を可変させる**
https://shimz.me/blog/d3v4/5144


---------------------------------

20170801
**leaflet チュートリアル**
http://leafletjs.com/examples.html

**mapbox アクセストークン**
https://www.mapbox.com/signup/?route-to=https://www.mapbox.com/studio/account/tokens/

**ストリートマップ** (グレー)になる
https://api.mapbox.com/styles/v1/mapbox/light-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZ2lvZ2lva3VtYSIsImEiOiJjaWhxOXU3angwNGdidDVtMnVmdWF2bG1jIn0.NfCaOj0x0pqDTZM9tEk6wQ

**MapBoxで自作スタイル**
http://tech.sanwasystem.com/entry/2015/09/30/210926



---------------------------------

>>>>>>> 493c9da7fa81061387ba740f5c073674be2db525
20170731
leaflet.js を使おう

**web地図**
https://shimz.me/blog/map/4268

**geojsonを使いこなすためのWebサービス**
https://shimz.me/blog/web/3789

**geojson　などに変換 **
http://mapshaper.org/

geojsonlint**
http://geojsonlint.com/

**topojson**
https://github.com/topojson/topojson
---------------------------------
20170731
prefCode 群馬県 = 10
n. index026.html > index006.html を元にマップに観光資源  =>  ダメ　geojson ファイルが必要
RESAS  > https://opendata.resas-portal.go.jp/docs/api/v1/tourism/attractions.html

https://opendata.resas-portal.go.jp/api/v1/tourism/attractions?prefCode=10&cityCode=-

m. index027.html > ★★★ leaflet.js 基本
//マーカー＆ポップアップ追加
var marker = L.marker([36.3219088　, 139.0032936])
	.addTo(map);



---------------------------------
**geojson　て何だろう**
6つのタイプ
Point
LineString
Polygon
MultiPoint
MultiLineString
MultiPolygon

http://blog.qaramell.com/hunzy/8191
{ "type": "FeatureCollection",
  "features": [
    { "type": "Feature",
      "properties": {"prop0": "好きな値！"},
      "geometry": {
        "type": "Point",
        "coordinates": [102.0, 0.5]
      }
    },
    { "type": "Feature",
      "properties": {"prop0": "好きな値！"},
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [ [100.0, 0.0], [101.0, 0.0], [101.0, 1.0],
            [100.0, 1.0], [100.0, 0.0] ]
          ]
      }
    },
    //...たくさん続く
  ]
}
---------------------------------
>>>>>>> ca1716256bc54b6fcf9b31066d369b85cec0f459
考えていたこと
- 論文の資料になるデータになること = 1. 証明できること 2. 裏ずけがある

- いわゆるデータであること

- 操作が簡単

20170730
k. index023.html > 総人口 line チャート

l. index024.html > line チャート　複数
https://bl.ocks.org/ocarneiro/a083012a5899c46390681352a549220d

m. index025.html > line チャート　人口複数
完成 => できそう　★★★

-----------

20170730
海外メディアが使っている4つのデータ関連ツール
https://medium.com/tokyobeta-journal/%E3%82%B8%E3%83%A3%E3%83%BC%E3%83%8A%E3%83%AA%E3%82%B9%E3%83%88%E5%90%91%E3%81%91%E3%81%AE%E3%83%87%E3%83%BC%E3%82%BF%E3%83%93%E3%82%B8%E3%83%A5%E3%82%A2%E3%83%AA%E3%82%BC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%84%E3%83%BC%E3%83%AB-add8ab156afb


silk
https://www.silk.co/


d3js ライブラリ
http://bl.ocks.org/enjalot/raw/211bd42857358a60a936/
-----------

20170729
清水さんのブログ
https://shimz.me/blog/d3v4/5189

ブロックス
https://bl.ocks.org/shimizu

**テスター**
http://shimz.me/example/RESAS_API/viewer/index.html


a. index014.html > 農業部門 ok

b. index015.html > 人口 ok
https://opendata.resas-portal.go.jp/api/v1/population/composition/perYear?cityCode=11362&prefCode=11

c. index016.html > array manipulation  
https://bl.ocks.org/shimizu/cceab22c96342b3cc929

d.  トランジション using Promise
https://bl.ocks.org/shimizu/8998fb9899e65b3196d5690182b674cb


e. index017.html > Pie チャート d3js v4  -> ok
https://bl.ocks.org/shimizu/f90651541575f348a129444003a73467


f. index018.html > イメージギャラリー
https://bl.ocks.org/shimizu/79409cca5bcc57c32ddae0a5f0a1a564

g. index019.html > bar チャート d3js ver.4
https://bl.ocks.org/shimizu/a4c0c940b19d42cf8ebca29e20573aca

h. index020.html > bar chart シンプル
https://bl.ocks.org/d3noob/bdf28027e0ce70bd132edc64f1dd7ea4


i. index021.html > 水平　barchart シンプル
https://bl.ocks.org/alandunning/7008d0332cc28a826b37b3cf6e7bd998

j. index022.html > ラインチャート　シンプル
https://bl.ocks.org/d3noob/402dd382a51a4f6eea487f9a35566de0


http://bl.ocks.org/enjalot/raw/211bd42857358a60a936/


-------------

<script src="https://d3js.org/d3-request.v1.min.js"></script>
<script src="https://d3js.org/d3.v4.min.js"></script>

...
<script>
var query="<request-url>";
d3.request(query)
  .post()
  .user("login-id")
  .password("login-password")
  .on("beforesend", function(request) { request.withCredentials = true; })
  .get(function(error, data) {
    //scripts to process result
   }
 );
 
 <script>